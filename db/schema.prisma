datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  created_at        Int?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  image         String?
  emailVerified DateTime?
  accounts      Account[]
  sessions      Session[]

  intraUser IntraUser?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model IntraUser {
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  id        String   @unique
  synced_at DateTime @updatedAt

  created_at DateTime
  update_at  DateTime

  login          String
  email          String
  displayname    String
  isStaff        Boolean
  pool_year      String
  pool_month     String
  anonymize_date DateTime
  alumni         Boolean
  // cursus_users   CursusUser[]
  // project_users  ProjectUser[]
  // title_users    TitleUser[]
  // campus_users   CampusUser[]
  // achievements   AchievementesOnUsers[]
  // coalitions     CoalitionsOnUsers[]
}
